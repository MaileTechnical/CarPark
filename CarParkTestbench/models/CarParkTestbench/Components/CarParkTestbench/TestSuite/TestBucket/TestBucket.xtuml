-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	'TestBucket',
	6,
	'TestBucket',
	'A test bucket is used to group related test cases; every test case must belong to a bucket.
This supertype uses the test sequencer to manage the order of execution of test cases.
This mechanism allows for postponment of instantiation of test case components.
Each test bucket subtype is activated, in sequence, by the test sequencing service.
Each subtype surfaces an operation which instantiates its stimuli or observations.
These stimuli/observations are instantiated as each test bucket is activated.
They may be deleted when the test bucket completes, dependent on configuration choice.
',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("9e2f82f6-ca33-4973-83c1-c3ddcc3c78a2",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	'AddToSuite',
	'Add a new instance of test bucket to the test suite.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'send TESTSEQ::AddBucket( bucketId:self.bucketId, bucketLabel:self.name );',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0,
	0);
INSERT INTO O_TFR
	VALUES ("15a0cfd7-25d3-4255-bd8f-7e24496c123a",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	'Delete',
	'Dispose of the test bucket instances after completion of execution.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// The following is a work around for lack of polymorphic operation in Verifier.
// See https://support.onefact.net/issues/12032 @TODO

select one nominal related by self->NominalCaseBucket[R700];
if ( not_empty nominal )
  unrelate self from nominal across R700;
  delete object instance nominal;
end if;
select one nonnominal related by self->NonNominalCaseBucket[R700];
if ( not_empty nonnominal )
  unrelate self from nonnominal across R700;
  delete object instance nonnominal;
end if;
select one failures related by self->DemonstrationCaseBucket[R700];
if ( not_empty failures )
  unrelate self from failures across R700;
  delete object instance failures;
end if;
delete object instance self;',
	1,
	'',
	"9e2f82f6-ca33-4973-83c1-c3ddcc3c78a2",
	0,
	0);
INSERT INTO O_TFR
	VALUES ("730ee9f9-3ba1-4bd2-9f66-8580d3c7f16e",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	'Initialized',
	'Signal the test sequencer that the bucket test cases may start execution.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'send TESTSEQ::BucketInitialized( bucketId:self.bucketId );',
	1,
	'',
	"15a0cfd7-25d3-4255-bd8f-7e24496c123a",
	0,
	0);
INSERT INTO O_TFR
	VALUES ("de94156e-56ed-4008-8b2c-56aa3c4a68e3",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	'AddTestCases',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// The following is a work around for lack of polymorphic operation in Verifier.
// See https://support.onefact.net/issues/12032 @TODO

select one nominal related by self->NominalCaseBucket[R700];
if ( not_empty nominal )
  nominal.CreateBucketTests();
end if;
select one nonnominal related by self->NonNominalCaseBucket[R700];
if ( not_empty nonnominal )
  nonnominal.CreateBucketTests();
end if;
select one failures related by self->DemonstrationCaseBucket[R700];
if ( not_empty failures )
  failures.CreateBucketTests();
end if;
select one escapes related by self->EscapeCaseBucket[R700];
if ( not_empty escapes )
  escapes.CreateBucketTests();
end if;',
	1,
	'',
	"730ee9f9-3ba1-4bd2-9f66-8580d3c7f16e",
	0,
	0);
INSERT INTO O_NBATTR
	VALUES ("6f0ad9d1-0e79-4a12-986a-84cab223229e",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2");
INSERT INTO O_BATTR
	VALUES ("6f0ad9d1-0e79-4a12-986a-84cab223229e",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2");
INSERT INTO O_ATTR
	VALUES ("6f0ad9d1-0e79-4a12-986a-84cab223229e",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	"00000000-0000-0000-0000-000000000000",
	'bucketId',
	'An identifier returned by the Test sequencer service.
Used to identify an instance when being invoked by the Test sequencer.',
	'',
	'bucketId',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("b5a17ab2-648b-4338-88b3-5fa209dedb3a",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2");
INSERT INTO O_BATTR
	VALUES ("b5a17ab2-648b-4338-88b3-5fa209dedb3a",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2");
INSERT INTO O_ATTR
	VALUES ("b5a17ab2-648b-4338-88b3-5fa209dedb3a",
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	"6f0ad9d1-0e79-4a12-986a-84cab223229e",
	'name',
	'',
	'',
	'name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2");
INSERT INTO O_ID
	VALUES (1,
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2");
INSERT INTO O_ID
	VALUES (2,
	"16897b1e-6136-49aa-9b9c-6df3d050bfa2");
INSERT INTO PE_PE
	VALUES ("16897b1e-6136-49aa-9b9c-6df3d050bfa2",
	1,
	"b5a0758b-c174-4581-a756-efc1476e998f",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("b5a0758b-c174-4581-a756-efc1476e998f",
	"00000000-0000-0000-0000-000000000000",
	"87ff681e-390e-45ca-9f9c-e0259790ea6c",
	'TestSuite',
	'',
	0,
	'../TestSuite.xtuml');
